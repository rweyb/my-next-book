// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid()) @map("_id")
  name       String
  email      String      @unique
  password   String
  reviews    Review[]
  favorites  Favorite[]
  ownedBooks OwnedBook[]
}

model Book {
  id        String   @id @default(uuid()) @map("_id")
  title     String
  author    String
  price     Int
  publisher String
  published DateTime
  image     String
  recommended Boolean  @default(false)
  reviews    Review[]
  favorites  Favorite[]
  ownedBooks OwnedBook[]
}

model Review {
  id        String   @id @default(uuid()) @map("_id")
  title     String
  author    String
  price     Int
  publisher String
  published DateTime
  image     String
  read      DateTime  @default(now())
  memo      String
  userId    String    @db.ObjectId
  bookId    String    @db.ObjectId
  user      User      @relation(fields: [userId], references: [id])
  book      Book      @relation(fields: [bookId], references: [id])

  @@map("reviews")
}

model Favorite {
  id        String   @id @default(uuid()) @map("_id")
  userId    String
  bookId    String
  title     String
  author    String
  price     Int
  publisher String
  published DateTime
  image     String
  user      User     @relation(fields: [userId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id])

  @@unique([userId, bookId])
  @@map("favorites")
}

model OwnedBook {
  id        String   @id @default(uuid()) @map("_id")
  userId    String   @db.ObjectId
  bookId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id])

  @@unique([userId, bookId])
  @@map("owned_books")
}
